apiVersion: apps/v1
kind: Deployment
metadata:
  name: bastion
  labels:
    app: bastion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bastion
  template:
    metadata:
      labels:
        app: bastion
    spec:
      serviceAccountName: bastion-sa
      containers:
      - name: bastion
        image: ubuntu:22.04
        command: ["/bin/bash"]
        args: ["-c", "apt-get update && apt-get install -y openssh-server sudo curl && curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && mv kubectl /usr/local/bin/ && useradd -m -s /bin/bash developer && echo 'developer:developer' | chpasswd && echo 'developer ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && mkdir -p /home/developer/.ssh && chmod 700 /home/developer/.ssh && chown developer:developer /home/developer/.ssh && mkdir -p /home/developer/.kube && cp /var/run/secrets/kubernetes.io/serviceaccount/ca.crt /home/developer/.kube/ && cp /var/run/secrets/kubernetes.io/serviceaccount/token /home/developer/.kube/ && echo 'apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /home/developer/.kube/ca.crt\n    server: https://kubernetes.default.svc.cluster.local\n  name: default\ncontexts:\n- context:\n    cluster: default\n    namespace: core-team\n    user: default\n  name: default\ncurrent-context: default\nkind: Config\nusers:\n- name: default\n  user:\n    tokenFile: /home/developer/.kube/token' > /home/developer/.kube/config && chown -R developer:developer /home/developer/.kube && service ssh start && tail -f /dev/null"]
        ports:
        - containerPort: 22
          name: ssh
        env:
        - name: KUBECONFIG
          value: "/home/developer/.kube/config"
        volumeMounts:
        - name: ssh-keys
          mountPath: /home/developer/.ssh/authorized_keys
          subPath: authorized_keys
          readOnly: true
      volumes:
      - name: ssh-keys
        configMap:
          name: bastion-ssh-keys
          defaultMode: 0600